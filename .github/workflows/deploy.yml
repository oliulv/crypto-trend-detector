name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Placeholder for version_label to remove error
    env:
      VERSION_LABEL: "placeholder"

    steps:
      # 1. Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. (Optional) Build Docker image locally â€“ mainly to verify your Dockerfile.
      #    Note: For EB deployments, Elastic Beanstalk will build your image using your Dockerfile.
      - name: Build Docker image (optional)
        run: docker build -t my-app .

      # 3. Create the deployment package.
      - name: Create deployment package
        working-directory: ${{ github.workspace }}  # Ensure we are at the project root
        run: |
          zip -r deploy.zip Dockerfile .ebextensions* Dockerrun.aws.json* . -x "*.git*"
          
      # 4. Configure AWS credentials for subsequent AWS CLI commands.
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5. Upload the deployment package (deploy.zip) to your S3 bucket.
      - name: Upload deployment package to S3
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.AWS_S3_BUCKET }}/deploy.zip

      # 6. Create a new Elastic Beanstalk application version.
      #    Here, we use the current timestamp as a version label.
      - name: Create new Elastic Beanstalk application version
        id: create_app_version
        run: |
          VERSION_LABEL=$(date +'%Y%m%d%H%M%S')
          echo "VERSION_LABEL=${VERSION_LABEL}" >> $GITHUB_ENV
          aws elasticbeanstalk create-application-version \
            --application-name "${{ secrets.EB_APP_NAME }}" \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="${{ secrets.AWS_S3_BUCKET }}",S3Key=deploy.zip

      # 7. Update the Elastic Beanstalk environment to the new application version.
      - name: Update Elastic Beanstalk environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ secrets.EB_ENV_NAME }}" \
            --version-label "${{ env.VERSION_LABEL }}"